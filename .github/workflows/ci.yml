name: CI

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x, 18.x, 20.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm test -- --ci

      - name: Build
        run: npm run build

      - name: Health check
        env:
          NODE_ENV: production
          PORT: 3000
        run: |
          nohup node server.js >/dev/null 2>&1 &
          SERVER_PID=$!
          # wait for server
          for i in {1..40}; do
            if curl -sf http://127.0.0.1:3000/health >/dev/null; then
              echo "Health endpoint is up"
              break
            fi
            sleep 0.5
          done
          echo "Health response:"
          curl -sf http://127.0.0.1:3000/health | jq '.' || curl -sf http://127.0.0.1:3000/health
          kill $SERVER_PID || true

  build:
    name: Build and Archive
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Create artifact package
        run: |
          mkdir -p artifact
          cp -R public artifact/public
          cp server.js package.json package-lock.json jest.config.js .eslintrc.js artifact/ || true
          # include workflow for reference
          mkdir -p artifact/.github/workflows && cp .github/workflows/ci.yml artifact/.github/workflows/ci.yml || true
          tar -czf weather-display-app-${{ github.sha }}.tgz -C artifact .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: weather-display-app-${{ github.sha }}
          path: weather-display-app-${{ github.sha }}.tgz
          if-no-files-found: error

  deploy_prep:
    name: Deploy Preparation
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: weather-display-app-${{ github.sha }}
          path: ./deploy

      - name: Verify package
        run: |
          ls -lah ./deploy
          tar -tzf ./deploy/weather-display-app-${{ github.sha }}.tgz | head -n 50

      - name: Prepare deployment metadata
        id: meta
        run: |
          echo "commit_sha=${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          echo "artifact=weather-display-app-${GITHUB_SHA}.tgz" >> $GITHUB_OUTPUT

      - name: Summary
        run: |
          echo "Artifact: weather-display-app-${GITHUB_SHA}.tgz" >> $GITHUB_STEP_SUMMARY
          echo "Commit: ${GITHUB_SHA}" >> $GITHUB_STEP_SUMMARY
          echo "Branch: ${GITHUB_REF#refs/heads/}" >> $GITHUB_STEP_SUMMARY
